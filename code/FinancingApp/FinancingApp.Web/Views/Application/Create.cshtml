@model FinancingApp.Web.Models.ApplicationCreateViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>New Application</h2>

@using (Html.BeginForm())
{
    @*@Html.AntiForgeryToken()*@

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Application Name" ,new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.Application.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.Application.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr/>
        <div class="form-group">
            @Html.LabelFor(model => model.Application.Customer.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Application.Customer.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Application.Customer.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Application.Customer.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Application.Customer.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Application.Customer.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Application.Customer.SSN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Application.Customer.SSN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Application.Customer.SSN, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Application.Customer.Address.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Application.Customer.Address.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Application.Customer.Address.AddressLine1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Application.Customer.Address.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Application.Customer.Address.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Application.Customer.Address.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Application.Customer.Address.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Application.Customer.Address.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Application.Customer.Address.State, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Application.Customer.Address.Zipcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Application.Customer.Address.Zipcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Application.Customer.Address.Zipcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedVendor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.SelectedVendor, Model.VendorList, new { id = "SelectedVendor" })
            </div>
        </div>

        <hr/>

        <div class="row">
            <div class="col-md-7">
                <input type="button" value="Add new..." id="btnAdd" class="btn pull-right"/>
            </div>
        </div>
        <br/>
        <div id="equipmentList">

            @for (int i = 0; i < Model.Equipments.Count; i++)
            {

                Html.RenderPartial("_AddEquipment", Model.Equipments[i]);
            }

        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section scripts
{
    <script type="text/javascript">

        $(document).ready(function () {


            $("#btnAdd").click(function () {

                var currentEquipmentId = $("#equipmentList").find('input:hidden').length;

                $.get("@Url.Action("AddEquipment", "Application")", { index: currentEquipmentId }, function (data) {

                    $("#equipmentList").append(data);

                });

            });


        });

    </script>
}


